#!/bin/bash
set -e
CHRONY_CONF_FILE="/etc/chrony/chrony.conf"

# setup ros2 environment
echo "-> Setting up ROS"

source "/opt/ros/$ROS_DISTRO/setup.bash"


echo "-> Setting up Chrony "


# confirm correct permissions on chrony run directory
if [ -d /run/chrony ]; then
  sudo chown -R ros:ros /run/chrony
  sudo chmod o-rx /run/chrony
  # remove previous pid file if it exist
  rm -f /var/run/chrony/chronyd.pid
fi

# confirm correct permissions on chrony variable state directory
if [ -d /var/lib/chrony ]; then
  sudo chown -R ros:ros /var/lib/chrony
fi

## dynamically populate chrony config file.
{
 sudo  echo "# https://github.com/simonrupf/docker-chrony"
 sudo  echo
 sudo  echo "# chrony.conf file generated by startup script"
 sudo  echo "# located at $0"
 sudo  echo
 sudo  echo "# time servers provided by NTP_SERVER environment variables."
} > ${CHRONY_CONF_FILE}


# PTP0 configuration: if it has been passed through, it means we want to use it
if [ -e /dev/ptp0 ]; then
  sudo  echo "refclock PHC /dev/ptp0 poll 3 dpoll -2 stratum 2" >> ${CHRONY_CONF_FILE}
fi

# final bits for the config file
{
  echo
  echo "driftfile /var/lib/chrony/chrony.drift"
  echo "makestep 0.1 3"
  if [ -n "${NTP_DIRECTIVES}" ]; then
    echo -e "${NTP_DIRECTIVES}"
  fi
  if [ "${NOCLIENTLOG:-false}" = true ]; then
    echo "noclientlog"
  fi
  echo
  echo "allow all"
} >> ${CHRONY_CONF_FILE}

# enable control of system clock, disabled by default
SYSCLK="-x"
if [[ "${ENABLE_SYSCLK:-false}" = true ]]; then
  SYSCLK=""
fi

## startup chronyd in the foreground
exec /usr/sbin/chronyd -u chrony -d ${SYSCLK} 
echo "==> Container ready"
exec "$@"

